// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O.
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory
 * location specified by address. If load==1, the in value is loaded
 * into the memory location specified by address. This value becomes
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used.
 * Access to address>0x6000 is invalid. Access to any address in
 * the range 0x4000-0x5FFF results in accessing the screen memory
 * map. Access to address 0x6000 results in accessing the keyboard
 * memory map. The behavior in these addresses is described in the
 * Screen and Keyboard chip specifications given in the book.
 */

/**
 * 0x0000から0x6000のアドレス空間を持つ
 * 0    (00            0) RAM begin
 * 16383( 11111111111111) RAM end
 * 16384(100000000000000) screen begin
 * 24575(101111111111111) screen end
 * 24576(110000000000000) keyboard begin
 * n番目のレジスタの値を調べるにはaddressにnを設定して出力する
 * loadが1の時は書込
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // アドレス13,14番目でRAMかscreenかkeyboradかを判断する
    DMux4Way(in=load, sel=address[13..14], a=loadram1, b=loadram2, c=loadscreen, d=loadkey);
    // 有効な方を選択する
    Or(a=loadram1, b=loadram2, out=loadram);

    RAM16K(in=in, load=loadram, address=address[0..13], out=outram);
    // Screen the range 0x4000-0x5FFF
    Screen(in=in, load=loadscreen, address=address[0..12], out=outscreen);
    Keyboard(out=outkey);

    Mux4Way16(a=outram, b=outram, c=outscreen, d=outkey, sel=address[13..14], out=out);
}
